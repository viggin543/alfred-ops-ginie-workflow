// build script dependencues
buildscript {
    ext.kotlin_version = '1.3.21'
    ext.serialization_version = '0.10.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

group 'com.viggin.alfred'
version '1.0-SNAPSHOT'

// plugins fetched in buildscript.dependencies
apply plugin: 'kotlin'
apply plugin: 'application' //https://docs.gradle.org/current/userguide/application_plugin.html
apply plugin: 'kotlinx-serialization' // generate serializers of annotated data classes
apply plugin: 'idea' //generate files so project can be opened with idea using. project/open file

repositories {
    mavenCentral()
    maven {
        url "https://kotlin.bintray.com/kotlinx"
        credentials {
            username = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER') ?: ""
            password = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY') ?: ""
        }
    }
}

// runtime dependencies
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.6'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
}

application {
    mainClassName = 'main.workflow.App'
    applicationDefaultJvmArgs = ['--add-opens', 'java.base/java.lang=ALL-UNNAMED', '-ea']
}

clean {
    delete 'workflow.log'
}

compileKotlin { // target java8 bytecode in order to : Calls to static methods in Java interfaces
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


task('publish') {
    dependsOn 'test'
    dependsOn 'installDist'
    description 'publishing workflow to -> ~/alfred_sync/Alfred.alfredpreferences/workflows/user.workflow.ops_ginie'
    doFirst {
        copy {
            delete "$System.env.HOME/alfred_sync/Alfred.alfredpreferences/workflows/user.workflow.ops_ginie/dist"
            from("$buildDir") {
                include "install/**"
            }
            into "$System.env.HOME/alfred_sync/Alfred.alfredpreferences/workflows/user.workflow.ops_ginie/dist"
        }
    }
}